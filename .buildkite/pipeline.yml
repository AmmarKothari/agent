steps:
  # - name: ":hammer:"
  #   command: "scripts/tests.sh"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - wait

  # - name: ":windows: 386"
  #   command: "scripts/build-binary.sh windows 386"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":windows: amd64"
  #   command: "scripts/build-binary.sh windows amd64"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":linux: amd64"
  #   command: "scripts/build-binary.sh linux amd64"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":linux: 386"
  #   command: "scripts/build-binary.sh linux 386"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":linux: arm"
  #   command: "scripts/build-binary.sh linux arm"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":linux: armhf"
  #   command: "scripts/build-binary.sh linux armhf"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":linux: arm64"
  #   command: "scripts/build-binary.sh linux arm64"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":mac: 386"
  #   command: "scripts/build-binary.sh darwin 386"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":mac: amd64"
  #   command: "scripts/build-binary.sh darwin amd64"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":freebsd: amd64"
  #   command: "scripts/build-binary.sh freebsd amd64"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":freebsd: 386"
  #   command: "scripts/build-binary.sh freebsd 386"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":openbsd: amd64"
  #   command: "scripts/build-binary.sh openbsd amd64"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":openbsd: 386"
  #   command: "scripts/build-binary.sh openbsd 386"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  # - name: ":dragonflybsd: amd64"
  #   command: "scripts/build-binary.sh dragonfly amd64"
  #   artifact_paths: "pkg/*"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       run: agent

  - wait

  - name: ":mag:"
    command: "scripts/extract-agent-version-metadata.sh"

  - wait

  # - name: ":debian: build"
  #   command: "scripts/build-debian-packages.sh"
  #   artifact_paths: "deb/**/*"
  #   branches: "v3.0-beta.34"
  #   agents:
  #     queue: "deploy"

  # - wait

  - block: ":shipit: Experimental"

  - name: ":s3: publish binaries"
    command: "scripts/publish-to-s3.sh"
    env:
      CODENAME: "experimental"
    agents:
      queue: "deploy"

  # - name: ":redhat: experimental"
  #   command: "scripts/rpm-package.sh"
  #   artifact_paths: "rpm/**/*"
  #   branches: "v3.0-beta.34"
  #   env:
  #     CODENAME: "experimental"
  #   agents:
  #     queue: "deploy"

  # - name: ":debian: publish experimental"
  #   command: "scripts/publish-debian-package.sh"
  #   branches: "v3.0-beta.34"
  #   env:
  #     CODENAME: "experimental"
  #   agents:
  #     queue: "deploy"

  # - name: ":github: :hammer:"
  #   command: "scripts/build-github-release.sh"
  #   artifact_paths: "releases/**/*"
  #   branches: "v3.0-beta.34"
  #   plugins:
  #     docker-compose#v1.5.0:
  #       config: docker-compose.release.yml
  #       run: github-release

  # - wait

  # - block: "Release docker images"

  # - name: ":whale: :rocket:"
  #   trigger: docker-buildkite-agent
  #   async: true
  #   build:
  #     message: "Update Docker images"
  #     commit: "HEAD"
  #     branch: "master"
  #     env:
  #       CODENAME: "experimental"

  - block: ":shipit: Unstable"

  - name: ":s3: publish binaries"
    command: "scripts/publish-to-s3.sh"
    env:
      CODENAME: "unstable"
    agents:
      queue: "deploy"

  # - name: ":redhat:"
  #   command: "scripts/rpm-package.sh"
  #   artifact_paths: "rpm/**/*"
  #   env:
  #     CODENAME: "unstable"
  #   agents:
  #     queue: "deploy"

  # - name: ":debian: publish unstable"
  #   command: "scripts/publish-debian-package.sh"
  #   env:
  #     CODENAME: "unstable"
  #   agents:
  #     queue: "deploy"
