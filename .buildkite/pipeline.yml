steps:
  - name: ":hammer:"
    command: "scripts/tests.sh"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - wait

  - name: ":windows: 386"
    command: "scripts/build-binary.sh windows 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":windows: amd64"
    command: "scripts/build-binary.sh windows amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":linux: amd64"
    command: "scripts/build-binary.sh linux amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":linux: 386"
    command: "scripts/build-binary.sh linux 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":linux: arm"
    command: "scripts/build-binary.sh linux arm"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":linux: armhf"
    command: "scripts/build-binary.sh linux armhf"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":linux: arm64"
    command: "scripts/build-binary.sh linux arm64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":mac: 386"
    command: "scripts/build-binary.sh darwin 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":mac: amd64"
    command: "scripts/build-binary.sh darwin amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":freebsd: amd64"
    command: "scripts/build-binary.sh freebsd amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":freebsd: 386"
    command: "scripts/build-binary.sh freebsd 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":openbsd: amd64"
    command: "scripts/build-binary.sh openbsd amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":openbsd: 386"
    command: "scripts/build-binary.sh openbsd 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - name: ":dragonflybsd: amd64"
    command: "scripts/build-binary.sh dragonfly amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.5.0:
        run: agent

  - wait

  - name: ":mag:"
    command: "scripts/extract-agent-version-metadata.sh"

  - wait

  - name: ":spiral_note_pad:"
    command: "scripts/check-changelog.sh"

  - wait

  - name: ":debian: build"
    command: "scripts/build-debian-packages.sh"
    artifact_paths: "deb/**/*"
    branches: "master"
    agents:
      queue: "deploy"

  - name: ":github: :hammer:"
    command: "scripts/build-github-release.sh"
    artifact_paths: "releases/**/*"
    branches: "master"
    plugins:
      docker-compose#v1.5.0:
        config: docker-compose.release.yml
        run: github-release

  - wait

  ## ---------------------------------------
  ## Publish to experimental

  - name: ":s3: experimental"
    command: "scripts/publish-to-s3.sh"
    branches: "master"
    env:
      CODENAME: "experimental"
    agents:
      queue: "deploy"

  - name: ":redhat: experimental"
    command: "scripts/rpm-package.sh"
    branches: "master"
    artifact_paths: "rpm/**/*"
    env:
      CODENAME: "experimental"
    agents:
      queue: "deploy"

  - name: ":debian: experimental"
    command: "scripts/publish-debian-package.sh"
    branches: "master"
    env:
      CODENAME: "experimental"
    agents:
      queue: "deploy"

  - name: ":pipeline:"
    command: "scripts/upload-release-pipeline.sh unstable"
    branches: "master show-version-in-block-steps"
